{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Section/Section.module.css","App.module.css","components/Notification/Notification.module.css","components/Notification/Notification.js","components/Statistics/StatisticList.js","components/Statistics/Statistics.js","components/FeedbackOptions/FeedbackOptions.js","components/Section/Section.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Notification","message","className","styles","StatisticList","good","neutral","bad","total","positivePercentage","list","item","Statistics","title","FeedbackOptions","options","onLeaveFeedback","box","map","option","index","type","button","onClick","Section","children","container","App","useState","setGood","setNeutral","setBad","countTotalFeedback","Math","round","countPositiveFeedbackPercentage","event","feedbackType","target","textContent","toLowerCase","prevGood","prevNeutral","prevBad","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d709dc14.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Statistics_stats__35PM8\",\"title\":\"Statistics_title__dVUVs\",\"list\":\"Statistics_list__1YqQ2\",\"item\":\"Statistics_item__5on4-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3Xeu1\",\"box\":\"FeedbackOptions_box__2DStA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__9GbyO\",\"title\":\"Section_title__1kMQq\",\"container\":\"Section_container__2n-yU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2qAQS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3gXQQ\"};","import PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <p className={styles.message}>{message}</p>\n);\n\nNotification.propTypes = {\n  message: PropTypes.string,\n};\n\nexport default Notification;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Statistics.module.css\";\n\nconst StatisticList = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className={styles.list}>\n    <li className={styles.item}>\n      Good: <span>{good}</span>\n    </li>\n    <li className={styles.item}>\n      Neutral: <span>{neutral}</span>\n    </li>\n    <li className={styles.item}>\n      Bad: <span>{bad}</span>\n    </li>\n    <li className={styles.item}>\n      Total: <span>{total}</span>\n    </li>\n    <li className={styles.item}>\n      Positive feedback: <span>{positivePercentage}%</span>\n    </li>\n  </ul>\n);\n\nStatisticList.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default StatisticList;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Notification from \"../Notification/Notification\";\nimport StatisticList from \"./StatisticList\";\nimport styles from \"./Statistics.module.css\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div>\n    <h2 className={styles.title}>Statistics</h2>\n    {total === 0 ? (\n      <Notification message=\"No feedback given\" />\n    ) : (\n      <StatisticList\n        good={good}\n        neutral={neutral}\n        bad={bad}\n        total={total}\n        positivePercentage={positivePercentage}\n      />\n    )}\n  </div>\n);\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import PropTypes from \"prop-types\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\n  <div className={styles.box}>\n    {options.map((option, index) => (\n      <button\n        type=\"button\"\n        key={index}\n        className={styles.button}\n        onClick={onLeaveFeedback}\n      >\n        {option}\n      </button>\n    ))}\n  </div>\n);\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from \"prop-types\";\nimport styles from \"./Section.module.css\";\n\nconst Section = ({ title, children }) => (\n  <div className={styles.container}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </div>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styles from \"./App.module.css\";\nimport React, { useState } from \"react\";\nimport Statistics from \"./components/Statistics/Statistics\";\nimport FeedbackOptions from \"./components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./components/Section/Section\";\n\nfunction App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    const total = countTotalFeedback();\n    return Math.round((good * 100) / total);\n  };\n\n  const handleIncrement = (event) => {\n    const feedbackType = event.target.textContent.toLowerCase();\n\n    if (feedbackType === \"good\") {\n      setGood((prevGood) => prevGood + 1);\n    }\n\n    if (feedbackType === \"neutral\") {\n      setNeutral((prevNeutral) => prevNeutral + 1);\n    }\n\n    if (feedbackType === \"bad\") {\n      setBad((prevBad) => prevBad + 1);\n    }\n  };\n\n  const total = countTotalFeedback();\n  const positivePercentage = countPositiveFeedbackPercentage();\n\n  return (\n    <>\n      <Section className={styles.container} title=\"Please leave Feedback\">\n        <FeedbackOptions\n          options={[\"Good\", \"Neutral\", \"Bad\"]}\n          onLeaveFeedback={handleIncrement}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={total}\n          positivePercentage={positivePercentage}\n        />\n      </Section>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}